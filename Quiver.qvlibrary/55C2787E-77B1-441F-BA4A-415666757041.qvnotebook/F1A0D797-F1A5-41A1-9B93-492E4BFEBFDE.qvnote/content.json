{
  "title": "Lecture - Pledge",
  "cells": [
    {
      "type": "text",
      "data": "<div><div>states of promises - interface</div></div><div><ul><li>.then</li><li>reseoved - first .then callback</li><li>rejected - .catch</li></ul><div>the point of promises is to give us back functional composition and error bubbling in an asynchronous world</div></div><div>ES6 promises are built into the language (.catch, .all, .race</div><div><br></div>"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "// CREATE A NEW PROMISE FUNCTION(?)\nvar promiseFunc = new Promise( function (resolve, reject) {\n  fs. readFile('log text' function(err, text) {\n    if (err) reject(err);\n    else resolve(text);\n  })\n})"
    },
    {
      "type": "text",
      "data": "promise.all - converts promises into an array<div>npm install bluebird —save</div><div>cont Promise = require(‘bluebird’)</div>"
    },
    {
      "type": "text",
      "data": "."
    }
  ]
}